---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = 'Atlas ERP - Modern Enterprise Resource Planning' } = Astro.props;
---

<!doctype html>
<html lang='en' class='scroll-smooth'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content={description} />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <meta name='theme-color' content='#3b82f6' />

    <!-- Favicon -->
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <link rel='apple-touch-icon' href='/apple-touch-icon.png' />

    <!-- Preload Critical Resources -->
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />

    <!-- SEO Meta Tags -->
    <meta property='og:title' content={title} />
    <meta property='og:description' content={description} />
    <meta property='og:type' content='website' />
    <meta name='twitter:card' content='summary_large_image' />

    <title>{title}</title>

    <!-- Import Theme System -->
    <link rel='stylesheet' href='/src/styles/themes.css' />
  </head>

  <body
    class='min-h-screen bg-gradient-to-br from-neutral-50 via-white to-blue-50 font-sans antialiased'
  >
    <!-- Background Pattern -->
    <div class='fixed inset-0 -z-10 overflow-hidden'>
      <div
        class='absolute -top-40 -right-32 w-96 h-96 bg-gradient-to-br from-blue-400/20 to-purple-600/20 rounded-full blur-3xl'
      >
      </div>
      <div
        class='absolute -bottom-40 -left-32 w-96 h-96 bg-gradient-to-tr from-green-400/20 to-blue-500/20 rounded-full blur-3xl'
      >
      </div>
      <div
        class='absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-gradient-to-r from-purple-400/10 to-pink-400/10 rounded-full blur-2xl'
      >
      </div>
    </div>

    <!-- Main Layout Container -->
    <div class='flex h-screen overflow-hidden'>
      <!-- Navigation Sidebar -->
      <aside class='flex-shrink-0 z-30'>
        <slot name='navigation' />
      </aside>

      <!-- Main Content Area -->
      <main class='flex-1 flex flex-col overflow-hidden'>
        <!-- Top Header Bar -->
        <header
          class='flex-shrink-0 bg-white/80 backdrop-blur-lg border-b border-neutral-200/50 px-6 py-4'
        >
          <div class='flex items-center justify-between'>
            <!-- Page Title -->
            <div class='flex items-center space-x-4'>
              <h1 class='text-2xl font-bold text-gradient'>{title.split(' - ')[0]}</h1>
              <div class='hidden sm:block w-px h-6 bg-neutral-300'></div>
              <p class='hidden sm:block text-sm text-neutral-600'>
                {
                  new Date().toLocaleDateString('en-US', {
                    weekday: 'long',
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                  })
                }
              </p>
            </div>

            <!-- Header Actions -->
            <div class='flex items-center space-x-4'>
              <!-- Quick Actions -->
              <div class='hidden md:flex items-center space-x-2'>
                <button class='p-2 rounded-lg hover:bg-neutral-100 transition-colors'>
                  <svg
                    class='w-5 h-5 text-neutral-600'
                    fill='none'
                    stroke='currentColor'
                    viewBox='0 0 24 24'
                  >
                    <path
                      stroke-linecap='round'
                      stroke-linejoin='round'
                      stroke-width='2'
                      d='M12 6v6m0 0v6m0-6h6m-6 0H6'></path>
                  </svg>
                </button>
                <button class='p-2 rounded-lg hover:bg-neutral-100 transition-colors'>
                  <svg
                    class='w-5 h-5 text-neutral-600'
                    fill='none'
                    stroke='currentColor'
                    viewBox='0 0 24 24'
                  >
                    <path
                      stroke-linecap='round'
                      stroke-linejoin='round'
                      stroke-width='2'
                      d='M15 17h5l-5 5v-5z'></path>
                    <path
                      stroke-linecap='round'
                      stroke-linejoin='round'
                      stroke-width='2'
                      d='M9 7H4l5-5v5z'></path>
                  </svg>
                </button>
              </div>

              <!-- Notifications -->
              <button class='relative p-2 rounded-lg hover:bg-neutral-100 transition-colors'>
                <svg
                  class='w-5 h-5 text-neutral-600'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M15 17h5l-5 5v-5z'></path>
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M9 7H4l5-5v5z'></path>
                </svg>
                <span class='absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full animate-pulse'
                ></span>
              </button>

              <!-- Theme Toggle -->
              <button
                id='theme-toggle'
                class='p-2 rounded-lg hover:bg-neutral-100 transition-colors'
                aria-label='Toggle theme'
              >
                <svg
                  class='w-5 h-5 text-neutral-600 dark:hidden'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z'
                  ></path>
                </svg>
                <svg
                  class='w-5 h-5 text-neutral-600 hidden dark:block'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z'
                  ></path>
                </svg>
              </button>
            </div>
          </div>
        </header>

        <!-- Scrollable Content Area -->
        <div class='flex-1 overflow-auto'>
          <div class='p-6 space-y-6'>
            <!-- Breadcrumb Navigation -->
            <nav class='flex items-center space-x-2 text-sm text-neutral-600'>
              <a href='/' class='hover:text-neutral-900 transition-colors'>Home</a>
              <svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                <path
                  stroke-linecap='round'
                  stroke-linejoin='round'
                  stroke-width='2'
                  d='M9 5l7 7-7 7'></path>
              </svg>
              <span class='text-neutral-900 font-medium'>{title.split(' - ')[0]}</span>
            </nav>

            <!-- Page Content -->
            <div class='animate-fade-in'>
              <slot />
            </div>
          </div>
        </div>
      </main>
    </div>

    <!-- Loading Overlay -->
    <div
      id='loading-overlay'
      class='fixed inset-0 bg-white/80 backdrop-blur-sm z-50 items-center justify-center hidden'
    >
      <div class='flex flex-col items-center space-y-4'>
        <div class='w-12 h-12 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin'>
        </div>
        <p class='text-neutral-600 font-medium'>Loading...</p>
      </div>
    </div>

    <!-- Scripts -->
    <script>
      // Theme Toggle Functionality
      const themeToggle = document.getElementById('theme-toggle');
      const html = document.documentElement;

      // Check for saved theme preference or default to light
      const savedTheme = localStorage.getItem('theme') || 'light';
      html.setAttribute('data-theme', savedTheme);

      themeToggle?.addEventListener('click', () => {
        const currentTheme = html.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

        html.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
      });

      // Smooth page transitions
      document.addEventListener('DOMContentLoaded', () => {
        // Add loading states for navigation
        const links = document.querySelectorAll('a[href^="/"]');
        const loadingOverlay = document.getElementById('loading-overlay');

        links.forEach(link => {
          link.addEventListener('click', e => {
            if (link.getAttribute('href') !== window.location.pathname) {
              loadingOverlay?.classList.remove('hidden');
            }
          });
        });

        // Hide loading overlay when page loads
        window.addEventListener('load', () => {
          loadingOverlay?.classList.add('hidden');
        });
      });

      // Add scroll-based header effects
      let lastScrollY = window.scrollY;
      const header = document.querySelector('header');

      window.addEventListener('scroll', () => {
        const currentScrollY = window.scrollY;

        if (currentScrollY > lastScrollY && currentScrollY > 100) {
          header?.classList.add('-translate-y-full');
        } else {
          header?.classList.remove('-translate-y-full');
        }

        lastScrollY = currentScrollY;
      });
    </script>
  </body>
</html>

<style>
  /* Import our custom theme system */
  @import '../styles/themes.css';

  /* Additional layout-specific styles */
  .text-gradient {
    background: linear-gradient(135deg, #3b82f6, #8b5cf6);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Smooth transitions for theme changes */
  * {
    transition:
      background-color 0.3s ease,
      border-color 0.3s ease,
      color 0.3s ease;
  }

  /* Custom scrollbar for main content */
  .overflow-auto::-webkit-scrollbar {
    width: 6px;
  }

  .overflow-auto::-webkit-scrollbar-track {
    background: transparent;
  }

  .overflow-auto::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 3px;
  }

  .overflow-auto::-webkit-scrollbar-thumb:hover {
    background: rgba(0, 0, 0, 0.2);
  }
</style>
