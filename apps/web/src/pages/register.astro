---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Register - Atlas ERP v2">
  <main class="min-h-screen flex items-center justify-center bg-background p-4">
    <div class="w-full max-w-md">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold mb-2">Atlas ERP v2</h1>
        <p class="text-muted-foreground">Create your account</p>
      </div>
      
      <div class="max-w-md mx-auto bg-card p-6 rounded-lg border">
        <h2 class="text-2xl font-bold text-center mb-6">Sign Up</h2>
        
        <form id="registerForm" class="space-y-4">
          <div class="grid grid-cols-2 gap-4">
            <div>
              <label for="firstName" class="block text-sm font-medium mb-2">
                First Name
              </label>
              <input
                id="firstName"
                type="text"
                required
                class="w-full px-3 py-2 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
                placeholder="John"
              />
            </div>
            <div>
              <label for="lastName" class="block text-sm font-medium mb-2">
                Last Name
              </label>
              <input
                id="lastName"
                type="text"
                required
                class="w-full px-3 py-2 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
                placeholder="Doe"
              />
            </div>
          </div>

          <div>
            <label for="email" class="block text-sm font-medium mb-2">
              Email
            </label>
            <input
              id="email"
              type="email"
              required
              class="w-full px-3 py-2 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
              placeholder="john@example.com"
            />
          </div>

          <div>
            <label for="password" class="block text-sm font-medium mb-2">
              Password
            </label>
            <input
              id="password"
              type="password"
              required
              minlength="6"
              class="w-full px-3 py-2 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
              placeholder="At least 6 characters"
            />
          </div>

          <div>
            <label for="confirmPassword" class="block text-sm font-medium mb-2">
              Confirm Password
            </label>
            <input
              id="confirmPassword"
              type="password"
              required
              class="w-full px-3 py-2 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
              placeholder="Confirm your password"
            />
          </div>

          <div id="error" class="hidden bg-destructive/10 border border-destructive text-destructive px-3 py-2 rounded-md text-sm">
          </div>

          <button
            type="submit"
            id="submitBtn"
            class="w-full bg-primary text-primary-foreground py-2 px-4 rounded-md hover:bg-primary/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            Create Account
          </button>
        </form>

        <div class="mt-4 text-center">
          <p class="text-sm text-muted-foreground">
            Already have an account?{' '}
            <a href="/login" class="text-primary hover:underline">
              Sign in
            </a>
          </p>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('registerForm') as HTMLFormElement;
    const errorDiv = document.getElementById('error') as HTMLDivElement;
    const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const firstName = (document.getElementById('firstName') as HTMLInputElement).value;
      const lastName = (document.getElementById('lastName') as HTMLInputElement).value;
      const email = (document.getElementById('email') as HTMLInputElement).value;
      const password = (document.getElementById('password') as HTMLInputElement).value;
      const confirmPassword = (document.getElementById('confirmPassword') as HTMLInputElement).value;

      // Validate passwords match
      if (password !== confirmPassword) {
        showError('Passwords do not match');
        return;
      }

      submitBtn.disabled = true;
      submitBtn.textContent = 'Creating Account...';
      hideError();

      try {
        const response = await fetch('/api/auth/register', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            firstName,
            lastName,
            email,
            password,
          }),
        });

        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.error || 'Registration failed');
        }

        // Store session if provided
        if (data.session) {
          localStorage.setItem('supabase_session', JSON.stringify(data.session));
        }

        // Redirect to dashboard or show success message
        alert('Account created successfully! Please check your email for verification.');
        window.location.href = '/login';

      } catch (error) {
        showError(error instanceof Error ? error.message : 'Registration failed');
      } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = 'Create Account';
      }
    });

    function showError(message: string) {
      errorDiv.textContent = message;
      errorDiv.classList.remove('hidden');
    }

    function hideError() {
      errorDiv.classList.add('hidden');
    }
  });
</script>
